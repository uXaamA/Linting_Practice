repos:
  # The "repos" section lists which rules (called hooks) you want to run automatically every time you try to git commit.
  # a set of useful Python-based pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.1.0          # verstion of the repo we are pooling from the repo
    hooks:
      # list of definitions and supported hooks: https://pre-commit.com/hooks.html
      - id: trailing-whitespace      # removes any whitespace at the ends of lines
      - id: check-toml               # check toml syntax by loading all toml files
      - id: check-yaml               # check yaml syntax by loading all yaml files
      - id: check-json               # check-json syntax by loading all json files
      - id: check-merge-conflict     # check for files with merge conflict strings
        args: ['--assume-in-merge']  #  and run this check even when not explicitly in a merge
      - id: check-added-large-files  # check that no "large" files have been added
        args: ['--maxkb=10240']      #  where large means 10MB+, as in Hugging Face's git server
      - id: debug-statements         # check for python debug statements (import pdb, breakpoint, etc.)
      - id: detect-private-key       # checks for private keys (BEGIN X PRIVATE KEY, etc.)

  # ADD this section INSTEAD:
  - repo: https://github.com/nbQA-dev/nbQA
    rev: 1.7.1 # Use the latest stable version of nbqa
    hooks:
    - id: nbqa-black
      files: \.ipynb$
      args: [--line-length=120] # Pass args if needed, matching your black config
    - id: nbqa-flake8
      files: \.ipynb$
      args: [--config=.flake8] # Tell it to use your flake8 config
  

  # # Jupyter notebook linting using jupytext
  # - repo: https://github.com/mwouts/jupytext
  #   # rev: v1.14.0  # Make sure to choose a stable version
  #   hooks:
  #   - id: jupytext
  #     files: \.ipynb$  # Only lint .ipynb files

  
  # black python autoformatting
  - repo: https://github.com/psf/black
    rev: 22.3.0
    hooks:
      - id: black
      # including .py files
        types: [python]
        files: \.py$

  # flake8 python linter with all the fixins
  - repo: https://github.com/PyCQA/flake8
    rev: 3.9.2
    hooks:
      - id: flake8
        types: [python]
        files: \.py$
        additional_dependencies:
        - flake8-bandit
        - flake8-bugbear
        - flake8-docstrings
        - flake8-import-order
        - darglint
        - pycodestyle
        - pydocstyle
        args: ["--config", ".flake8"]
    # additional configuration of flake8 and extensions in .flake8

  # shellcheck-py for linting shell files
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.8.0.4
    hooks:
      - id: shellcheck
